<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <context:component-scan base-package="cloudify.widget.pool.manager" />

    <import resource="pool-manager-app-context.xml" />



    <bean id="settingsLoader" class="cloudify.widget.pool.manager.SettingsFileLoader">
        <property name="settingsFilePath" value="conf/dev/manager-settings.json" />
    </bean>

    <bean id="settingsDataAccessManager" class="cloudify.widget.pool.manager.SettingsJsonDataAccessManager">
        <property name="settingsFileLoader" ref="settingsLoader" />
    </bean>


    <!-- mocking task executor so tests don't have to use thread-waits -->
    <!--<bean id="synchronousExecutorService" class="cloudify.widget.pool.manager.SynchronousExecutorService">-->
        <!--<constructor-arg value="10" />-->
    <!--</bean>-->

    <!--<bean id="testTaskExecutor" class="cloudify.widget.pool.manager.TaskExecutor" init-method="init" destroy-method="destroy">-->
        <!--<property name="executorService" ref="synchronousExecutorService" /> &lt;!&ndash; change to synchronous executor to avoid using waits in the test body &ndash;&gt;-->
    <!--</bean>-->

    <bean id="testTaskExecutor" class="cloudify.widget.pool.manager.TaskExecutor" init-method="init" destroy-method="destroy">
        <property name="executorService" ref="taskPool" />
    </bean>

    <bean id="nExecutions" class="java.lang.Integer">
        <constructor-arg value="1" /> <!-- if we use more than one, we shouldn't use the SynchronousExecutorService executor mock, as it will execute threads subsequently -->
    </bean>

    <bean id="bootstrapScriptResourcePath" class="java.lang.String">
        <constructor-arg value="classpath:bootstrap_machine.sh" />
    </bean>

    <bean id="bootstrapSuccessText" class="java.lang.String">
        <constructor-arg value="successfully" />
    </bean>

</beans>